---

- name: Download the Go tarball
  get_url:
    url: "{{ go_download_location }}"
    dest: /usr/local/src/{{ go_tarball }}
    checksum: "{{ go_tarball_checksum }}"

- name: Register the current Go version (if any)
  command: /usr/local/go/bin/go version
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: Remove old installation of Go
  file:
    path: /usr/local/go
    state: absent
  when: go_version|failed or go_version.stdout != go_version_target

- name: Extract the Go tarball if Go is not yet installed or not the desired version
  unarchive:
    src: /usr/local/src/{{ go_tarball }}
    dest: /usr/local
    copy: no
  when: go_version|failed or go_version.stdout != go_version_target

- name: Add the Go bin directory to the PATH environment variable for all users
  shell: "{{ item }}"
  with_items:
    - echo 'export GOROOT=/usr/local/go' | sudo tee -a ~/.bashrc

- name: Set GOPATH for all users
  shell: "{{ item }}"
  with_items:
    - echo 'export GOPATH=$HOME/go' | sudo tee -a ~/.bashrc
    - echo 'export PATH=/home/$USER/protoc/bin:$PATH:$GOROOT/bin:$GOPATH/bin' | sudo tee -a ~/.bashrc

# create directories for go/src if it doesn't exist
- name: Create /home/$USER/go/src dir
  file:
    path: /home/$USER/go/src
    state: directory
    mode: 0755
